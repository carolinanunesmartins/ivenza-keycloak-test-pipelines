found 186 unique permissions
("Can create articles", PermissionMap { resource: "manage.articles", scopes: ["create"], roles: ["developer"] })
("Can create domains", PermissionMap { resource: "manage.domains", scopes: ["create"], roles: ["developer"] })
("Can delete cutPlans", PermissionMap { resource: "manage.cutPlans", scopes: ["delete"], roles: ["developer"] })
("Can edit articles", PermissionMap { resource: "manage.articles", scopes: ["edit"], roles: ["configurator", "developer"] })
("Can edit batches", PermissionMap { resource: "manage.batches", scopes: ["edit"], roles: ["configurator", "developer", "manager"] })
("Can edit boards", PermissionMap { resource: "manage.boards", scopes: ["edit"], roles: ["configurator", "developer"] })
("Can edit cutPlans", PermissionMap { resource: "manage.cutPlans", scopes: ["edit"], roles: ["developer"] })
("Can edit decors", PermissionMap { resource: "manage.decors", scopes: ["edit"], roles: ["configurator", "developer"] })
("Can edit domains", PermissionMap { resource: "manage.domains", scopes: ["edit"], roles: ["configurator", "developer"] })
("Can edit edgebandMaterials", PermissionMap { resource: "manage.edgebandMaterials", scopes: ["edit"], roles: ["configurator", "developer"] })
("Can edit edgebands", PermissionMap { resource: "manage.edgebands", scopes: ["edit"], roles: ["configurator", "developer"] })
("Can edit factory", PermissionMap { resource: "manage.factory", scopes: ["edit"], roles: ["developer"] })
("Can edit unitsOfMeasurement", PermissionMap { resource: "manage.unitsOfMeasurement", scopes: ["edit"], roles: ["developer"] })
("Can edit userGroups", PermissionMap { resource: "manage.userGroups", scopes: ["edit"], roles: ["configurator", "developer"] })
("Can edit users", PermissionMap { resource: "manage.users", scopes: ["edit"], roles: ["configurator", "developer"] })
("Can edit vendors", PermissionMap { resource: "manage.vendors", scopes: ["edit"], roles: ["configurator", "developer"] })
("Can export articles", PermissionMap { resource: "manage.articles", scopes: ["export"], roles: ["configurator", "developer"] })
("Can export batches to PTS", PermissionMap { resource: "manage.batches", scopes: ["export.PTS"], roles: ["developer"] })
("Can export batches to PTX", PermissionMap { resource: "manage.batches", scopes: ["export.PTX"], roles: ["developer"] })
("Can export batches to XLS", PermissionMap { resource: "manage.batches", scopes: ["export.XLS"], roles: ["developer"] })
("Can export boardMaterials", PermissionMap { resource: "manage.boardMaterials", scopes: ["export"], roles: ["configurator", "developer"] })
("Can export boards", PermissionMap { resource: "manage.boards", scopes: ["export"], roles: ["configurator", "developer"] })
("Can export cutPlans to PNL", PermissionMap { resource: "manage.cutPlans", scopes: ["export.PNL"], roles: ["developer"] })
("Can export cutPlans to PNX", PermissionMap { resource: "manage.cutPlans", scopes: ["export.PNX"], roles: ["developer"] })
("Can export cutPlans to PTS", PermissionMap { resource: "manage.cutPlans", scopes: ["export.PTS"], roles: ["developer"] })
("Can export cutPlans to PTX", PermissionMap { resource: "manage.cutPlans", scopes: ["export.PTX"], roles: ["developer"] })
("Can export cutPlans to STK", PermissionMap { resource: "manage.cutPlans", scopes: ["export.STK"], roles: ["developer"] })
("Can export cutPlans to XLS", PermissionMap { resource: "manage.cutPlans", scopes: ["export.XLS"], roles: ["developer"] })
("Can export cutPlans to cpout", PermissionMap { resource: "manage.cutPlans", scopes: ["export.cpout"], roles: ["developer"] })
("Can export cutPlans to selcoOsi", PermissionMap { resource: "manage.cutPlans", scopes: ["export.selcoOsi"], roles: ["developer"] })
("Can export decors", PermissionMap { resource: "manage.decors", scopes: ["export"], roles: ["configurator", "developer"] })
("Can export edgebandMaterials", PermissionMap { resource: "manage.edgebandMaterials", scopes: ["export"], roles: ["configurator", "developer"] })
("Can export productionOrders to PTS", PermissionMap { resource: "manage.productionOrders", scopes: ["export.PTS"], roles: ["developer"] })
("Can export productionOrders to PTX", PermissionMap { resource: "manage.productionOrders", scopes: ["export.PTX"], roles: ["developer"] })
("Can export productionOrders to XLS", PermissionMap { resource: "manage.productionOrders", scopes: ["export.XLS"], roles: ["developer"] })
("Can import articles", PermissionMap { resource: "manage.articles", scopes: ["import"], roles: ["configurator", "developer"] })
("Can import boardMaterials", PermissionMap { resource: "manage.boardMaterials", scopes: ["import"], roles: ["configurator", "developer"] })
("Can import boards", PermissionMap { resource: "manage.boards", scopes: ["import"], roles: ["configurator", "developer"] })
("Can import decors", PermissionMap { resource: "manage.decors", scopes: ["import"], roles: ["configurator", "developer"] })
("Can import edgebandMaterials", PermissionMap { resource: "manage.edgebandMaterials", scopes: ["import"], roles: ["configurator", "developer"] })
("Can manage addOns", PermissionMap { resource: "manage.addOns", scopes: [], roles: ["developer"] })
("Can manage address2 on shop.orders", PermissionMap { resource: "shop.orders", scopes: ["address2"], roles: ["developer"] })
("Can manage articles", PermissionMap { resource: "manage.articles", scopes: [], roles: ["configurator", "developer", "manager"] })
("Can manage barcode.panels", PermissionMap { resource: "barcode.panels", scopes: [], roles: ["developer"] })
("Can manage batches", PermissionMap { resource: "manage.batches", scopes: ["export.PNL", "export.PNX", "export.STK", "lacqueredPanels", "materialSummary", "printLabels", "purchasedPanels"], roles: ["configurator", "developer", "manager", "production"] })
("Can manage batches.boardPickList", PermissionMap { resource: "manage.batches.boardPickList", scopes: [], roles: ["configurator", "developer", "manager", "production"] })
("Can manage billOfMaterials on orders", PermissionMap { resource: "manage.orders", scopes: ["billOfMaterials"], roles: ["developer"] })
("Can manage boardMaterialTypes", PermissionMap { resource: "manage.boardMaterialTypes", scopes: ["edit"], roles: ["configurator", "developer"] })
("Can manage boardMaterials", PermissionMap { resource: "manage.boardMaterials", scopes: ["edit"], roles: ["configurator", "developer", "manager"] })
("Can manage boards", PermissionMap { resource: "manage.boards", scopes: [], roles: ["configurator", "developer", "manager"] })
("Can manage calculatedCostPrice on orderRows", PermissionMap { resource: "manage.orderRows", scopes: ["calculatedCostPrice"], roles: ["developer"] })
("Can manage calculatedSalePrice on orderRows", PermissionMap { resource: "manage.orderRows", scopes: ["calculatedSalePrice"], roles: ["developer"] })
("Can manage calendars", PermissionMap { resource: "manage.calendars", scopes: ["edit"], roles: ["developer"] })
("Can manage cancelProduction on orders", PermissionMap { resource: "manage.orders", scopes: ["cancelProduction"], roles: ["configurator", "developer"] })
("Can manage company on shop.orders", PermissionMap { resource: "shop.orders", scopes: ["company"], roles: ["developer"] })
("Can manage completeOrder on orders", PermissionMap { resource: "manage.orders", scopes: ["completeOrder"], roles: ["developer"] })
("Can manage configurators", PermissionMap { resource: "manage.configurators", scopes: ["edit"], roles: ["developer"] })
("Can manage consumerBasePrice on shop.personal", PermissionMap { resource: "shop.personal", scopes: ["consumerBasePrice"], roles: ["consumer", "developer", "retail"] })
("Can manage consumerNotes on shop.orders", PermissionMap { resource: "shop.orders", scopes: ["consumerNotes"], roles: ["developer"] })
("Can manage consumerPriceFactor on shop.personal", PermissionMap { resource: "shop.personal", scopes: ["consumerPriceFactor"], roles: ["consumer", "developer", "retail"] })
("Can manage country on shop.orders", PermissionMap { resource: "shop.orders", scopes: ["country"], roles: ["developer"] })
("Can manage createProposal on shop.orders", PermissionMap { resource: "shop.orders", scopes: ["createProposal"], roles: ["configurator", "developer", "manager", "order"] })
("Can manage customOrderProperties", PermissionMap { resource: "manage.customOrderProperties", scopes: ["edit"], roles: ["developer"] })
("Can manage customerNotes on shop.orders", PermissionMap { resource: "shop.orders", scopes: ["customerNotes"], roles: ["developer"] })
("Can manage customerNotesPerRow on shop.orders", PermissionMap { resource: "shop.orders", scopes: ["customerNotesPerRow"], roles: ["developer"] })
("Can manage customerReference on shop.orders", PermissionMap { resource: "shop.orders", scopes: ["customerReference"], roles: ["developer"] })
("Can manage cutPlans", PermissionMap { resource: "manage.cutPlans", scopes: [], roles: ["configurator", "developer", "manager", "production"] })
("Can manage cuttingOptimizerSettings", PermissionMap { resource: "manage.cuttingOptimizerSettings", scopes: ["edit"], roles: ["developer"] })
("Can manage decors", PermissionMap { resource: "manage.decors", scopes: [], roles: ["configurator", "developer", "manager"] })
("Can manage deleteIfLocked on cutPlans", PermissionMap { resource: "manage.cutPlans", scopes: ["deleteIfLocked"], roles: ["developer"] })
("Can manage deliveryDate on shop.orders", PermissionMap { resource: "shop.orders", scopes: ["deliveryDate"], roles: ["developer"] })
("Can manage deliveryDetails on shop.orders", PermissionMap { resource: "shop.orders", scopes: ["deliveryDetails"], roles: ["developer"] })
("Can manage deliveryMethod on shop.orders", PermissionMap { resource: "shop.orders", scopes: ["deliveryMethod"], roles: ["developer"] })
("Can manage deliveryMethods", PermissionMap { resource: "manage.deliveryMethods", scopes: ["edit"], roles: ["developer"] })
("Can manage design", PermissionMap { resource: "design", scopes: ["collada", "collada.operations", "cuf", "details", "details.modify", "dxf", "kmz", "kmz.operations", "obj", "pov"], roles: ["developer"] })
("Can manage details on shop.personal", PermissionMap { resource: "shop.personal", scopes: ["details", "address1", "address2", "appLogo", "city", "company", "country", "currency", "email", "fax", "fullName", "homePage", "locale", "measurePreferences", "phone", "printLogo", "sex", "userInterface", "vatId", "webLogo", "zip"], roles: ["developer"] })
("Can manage developer", PermissionMap { resource: "developer", scopes: [], roles: ["developer"] })
("Can manage domains", PermissionMap { resource: "manage.domains", scopes: [], roles: ["configurator", "developer", "manager"] })
("Can manage domains.emailSettings", PermissionMap { resource: "manage.domains.emailSettings", scopes: ["edit"], roles: ["developer"] })
("Can manage domains.orderDocuments", PermissionMap { resource: "manage.domains.orderDocuments", scopes: ["edit"], roles: ["developer"] })
("Can manage domains.orderSettings", PermissionMap { resource: "manage.domains.orderSettings", scopes: ["edit"], roles: ["configurator", "developer"] })
("Can manage domains.themeSettings", PermissionMap { resource: "manage.domains.themeSettings", scopes: ["edit"], roles: ["developer"] })
("Can manage domains.thirdPartyInterfaces", PermissionMap { resource: "manage.domains.thirdPartyInterfaces", scopes: ["edit"], roles: ["developer"] })
("Can manage edgebandMaterials", PermissionMap { resource: "manage.edgebandMaterials", scopes: [], roles: ["configurator", "developer", "manager"] })
("Can manage edgebands", PermissionMap { resource: "manage.edgebands", scopes: [], roles: ["configurator", "developer", "manager"] })
("Can manage edit.appLogo on users", PermissionMap { resource: "manage.users", scopes: ["edit.appLogo", "appLogo"], roles: ["developer"] })
("Can manage edit.printLogo on users", PermissionMap { resource: "manage.users", scopes: ["edit.printLogo", "printLogo"], roles: ["developer"] })
("Can manage edit.webLogo on users", PermissionMap { resource: "manage.users", scopes: ["edit.webLogo", "webLogo"], roles: ["developer"] })
("Can manage emailTemplates", PermissionMap { resource: "manage.emailTemplates", scopes: ["edit"], roles: ["developer"] })
("Can manage eventHandlers", PermissionMap { resource: "manage.eventHandlers", scopes: ["edit"], roles: ["developer"] })
("Can manage factory", PermissionMap { resource: "factory", scopes: [], roles: ["developer"] })
("Can manage factory.jsa", PermissionMap { resource: "manage.factory.jsa", scopes: ["configure", "start"], roles: ["developer"] })
("Can manage factory.resourcePaths", PermissionMap { resource: "manage.factory.resourcePaths", scopes: ["create", "edit", "remove"], roles: ["developer"] })
("Can manage factory.resources", PermissionMap { resource: "manage.factory.resources", scopes: ["create", "edit", "printLabels", "remove", "statistics"], roles: ["developer"] })
("Can manage factoryLocations", PermissionMap { resource: "manage.factoryLocations", scopes: ["edit", "printLabels"], roles: ["developer"] })
("Can manage hardwareArticles", PermissionMap { resource: "manage.hardwareArticles", scopes: ["edit"], roles: ["developer"] })
("Can manage instructions on cutPlans", PermissionMap { resource: "manage.cutPlans", scopes: ["instructions"], roles: ["developer"] })
("Can manage list on domains", PermissionMap { resource: "manage.domains", scopes: ["list"], roles: ["developer"] })
("Can manage manage", PermissionMap { resource: "manage", scopes: ["productLines"], roles: ["configurator", "developer"] })
("Can manage manager", PermissionMap { resource: "manager", scopes: [], roles: ["configurator", "developer", "manager", "order", "production", "support"] })
("Can manage manager.diagnostics", PermissionMap { resource: "manager.diagnostics", scopes: [], roles: ["configurator", "developer"] })
("Can manage manager.reports", PermissionMap { resource: "manager.reports", scopes: ["edit"], roles: ["developer"] })
("Can manage manager.updateCatalogPrices", PermissionMap { resource: "manager.updateCatalogPrices", scopes: [], roles: ["developer"] })
("Can manage manager.xmlArticleEditor", PermissionMap { resource: "manager.xmlArticleEditor", scopes: [], roles: ["developer"] })
("Can manage markComplete on productionItems", PermissionMap { resource: "manage.productionItems", scopes: ["markComplete"], roles: ["developer"] })
("Can manage measurePreferences", PermissionMap { resource: "manage.measurePreferences", scopes: [], roles: ["developer"] })
("Can manage optimizeForPlanning on batches.boardPickList", PermissionMap { resource: "manage.batches.boardPickList", scopes: ["optimizeForPlanning"], roles: ["configurator", "developer", "manager"] })
("Can manage optimizeForProduction on batches.boardPickList", PermissionMap { resource: "manage.batches.boardPickList", scopes: ["optimizeForProduction"], roles: ["configurator", "developer", "manager"] })
("Can manage orderDocuments", PermissionMap { resource: "manage.orderDocuments", scopes: ["edit"], roles: ["developer"] })
("Can manage orderRows", PermissionMap { resource: "manage.orderRows", scopes: [], roles: ["configurator", "developer", "manager", "order"] })
("Can manage orderRows.consumerPrice", PermissionMap { resource: "manage.orderRows.consumerPrice", scopes: ["edit"], roles: ["developer"] })
("Can manage orderRows.consumerPrice.discount", PermissionMap { resource: "manage.orderRows.consumerPrice.discount", scopes: ["amount"], roles: ["developer"] })
("Can manage orderRows.customerCostPrice", PermissionMap { resource: "manage.orderRows.customerCostPrice", scopes: ["edit"], roles: ["developer"] })
("Can manage orderRows.customerCostPrice.discount", PermissionMap { resource: "manage.orderRows.customerCostPrice.discount", scopes: ["amount"], roles: ["developer"] })
("Can manage orderRows.customerSalePrice", PermissionMap { resource: "manage.orderRows.customerSalePrice", scopes: ["edit"], roles: ["developer"] })
("Can manage orderRows.customerSalePrice.discount", PermissionMap { resource: "manage.orderRows.customerSalePrice.discount", scopes: ["amount"], roles: ["developer"] })
("Can manage orderRows.design", PermissionMap { resource: "manage.orderRows.design", scopes: ["edit"], roles: ["configurator", "developer", "manager"] })
("Can manage orders", PermissionMap { resource: "manage.orders", scopes: ["acceptOrder", "acceptProposal", "cancelOrder", "cancelProposal", "createProposal", "edit", "releaseProduction", "requestProposal"], roles: ["configurator", "developer", "manager", "order", "support"] })
("Can manage orders.properties", PermissionMap { resource: "manage.orders.properties", scopes: ["address2", "company", "consumerNotes", "country", "customerNotes", "deliveryDate", "deliveryDetails", "deliveryMethod", "edit", "phone", "productionNotes"], roles: ["developer"] })
("Can manage orders.properties.billingAddress", PermissionMap { resource: "manage.orders.properties.billingAddress", scopes: ["edit"], roles: ["developer"] })
("Can manage orders.properties.consumerAddress", PermissionMap { resource: "manage.orders.properties.consumerAddress", scopes: ["edit"], roles: ["developer"] })
("Can manage orders.properties.externalReference", PermissionMap { resource: "manage.orders.properties.externalReference", scopes: ["edit"], roles: ["developer"] })
("Can manage orders.properties.shippingAddress", PermissionMap { resource: "manage.orders.properties.shippingAddress", scopes: ["edit"], roles: ["developer"] })
("Can manage overview on batches", PermissionMap { resource: "manage.batches", scopes: ["overview"], roles: ["developer"] })
("Can manage partList on orders", PermissionMap { resource: "manage.orders", scopes: ["partList"], roles: ["developer"] })
("Can manage paymentMethods", PermissionMap { resource: "manage.paymentMethods", scopes: ["edit"], roles: ["developer"] })
("Can manage phone on shop.orders", PermissionMap { resource: "shop.orders", scopes: ["phone"], roles: ["developer"] })
("Can manage previewLabels on cutPlans", PermissionMap { resource: "manage.cutPlans", scopes: ["previewLabels"], roles: ["developer"] })
("Can manage product.cabinet", PermissionMap { resource: "product.cabinet", scopes: ["create", "edit"], roles: ["configurator", "consumer", "developer", "manager", "order", "retail", "support"] })
("Can manage product.custom", PermissionMap { resource: "product.custom", scopes: ["create", "edit"], roles: ["developer"] })
("Can manage product.interiorLayout", PermissionMap { resource: "product.interiorLayout", scopes: ["create", "edit"], roles: ["developer"] })
("Can manage product.layout", PermissionMap { resource: "product.layout", scopes: ["create", "edit"], roles: ["configurator", "developer", "manager"] })
("Can manage product.other", PermissionMap { resource: "product.other", scopes: ["create", "edit"], roles: ["developer"] })
("Can manage product.panel", PermissionMap { resource: "product.panel", scopes: ["create", "edit"], roles: ["configurator", "developer", "manager"] })
("Can manage productLine on domains", PermissionMap { resource: "manage.domains", scopes: ["productLine"], roles: ["configurator", "developer"] })
("Can manage productLines on domains", PermissionMap { resource: "manage.domains", scopes: ["productLines"], roles: ["configurator", "developer"] })
("Can manage productLines on manage", PermissionMap { resource: "manage.productLines", scopes: ["create", "edit", "list"], roles: ["configurator", "developer"] })
("Can manage productLines on userGroups", PermissionMap { resource: "manage.userGroups", scopes: ["productLines"], roles: ["configurator", "developer"] })
("Can manage productLines on users", PermissionMap { resource: "manage.users", scopes: ["productLines"], roles: ["configurator", "developer"] })
("Can manage productLines.materials", PermissionMap { resource: "manage.productLines.materials", scopes: ["edit", "export", "import"], roles: ["developer"] })
("Can manage productLines.priceAspects", PermissionMap { resource: "manage.productLines.priceAspects", scopes: ["edit"], roles: ["developer"] })
("Can manage productLines.priceCalculation", PermissionMap { resource: "manage.productLines.priceCalculation", scopes: ["costPrice", "edit", "salePrice"], roles: ["configurator", "developer"] })
("Can manage productValueRules", PermissionMap { resource: "manage.productValueRules", scopes: ["edit"], roles: ["developer"] })
("Can manage productionCalendar", PermissionMap { resource: "manage.productionCalendar", scopes: ["customizeView", "updateProductionPlanning"], roles: ["developer"] })
("Can manage productionItems", PermissionMap { resource: "manage.productionItems", scopes: ["edit", "export.DXF", "markCancelled", "markDamaged", "printLabels", "replicate", "rollbackDamaged"], roles: ["configurator", "developer", "manager", "production"] })
("Can manage productionJobOrderings", PermissionMap { resource: "manage.productionJobOrderings", scopes: ["edit"], roles: ["developer"] })
("Can manage productionJobs", PermissionMap { resource: "manage.productionJobs", scopes: ["edit"], roles: ["configurator", "developer", "manager", "production"] })
("Can manage productionNotes on shop.orders", PermissionMap { resource: "shop.orders", scopes: ["productionNotes"], roles: ["developer"] })
("Can manage productionOrders", PermissionMap { resource: "manage.productionOrders", scopes: ["combination", "create", "designDrawing", "edit", "export.CID", "export.DXF", "export.FMC", "export.MPR", "export.PNL", "export.PNX", "export.STK", "hardwarePickList", "import.XML", "lacqueredPanels", "markCancelled", "markComplete", "materialPickList", "panelChecklist", "previewLabels", "printLabels", "purchasedPanels", "replicate"], roles: ["configurator", "developer", "manager", "production"] })
("Can manage productionOrders.externalReference", PermissionMap { resource: "manage.productionOrders.externalReference", scopes: ["edit"], roles: ["developer"] })
("Can manage productionPlanners", PermissionMap { resource: "manage.productionPlanners", scopes: ["edit"], roles: ["developer"] })
("Can manage productionPlanning", PermissionMap { resource: "manage.productionPlanning", scopes: [], roles: ["configurator", "developer", "manager"] })
("Can manage quotations", PermissionMap { resource: "manage.quotations", scopes: ["edit"], roles: ["developer"] })
("Can manage reschedule.anyDate on orders", PermissionMap { resource: "manage.orders", scopes: ["reschedule.anyDate"], roles: ["developer"] })
("Can manage salesPromotions", PermissionMap { resource: "manage.salesPromotions", scopes: ["edit"], roles: ["developer"] })
("Can manage scheduleProduction on orders", PermissionMap { resource: "manage.orders", scopes: ["scheduleProduction"], roles: ["configurator", "developer", "manager", "support"] })
("Can manage sendToMachine on cutPlans", PermissionMap { resource: "manage.cutPlans", scopes: ["sendToMachine"], roles: ["developer"] })
("Can manage settings", PermissionMap { resource: "manage.settings", scopes: ["edit"], roles: ["developer"] })
("Can manage shippingContainers", PermissionMap { resource: "manage.shippingContainers", scopes: ["edit", "printLabels"], roles: ["developer"] })
("Can manage shop.catalog", PermissionMap { resource: "shop.catalog", scopes: ["prices"], roles: ["developer"] })
("Can manage shop.orders", PermissionMap { resource: "shop.orders", scopes: ["acceptProposal", "cancelProposal", "history", "requestProposal"], roles: ["configurator", "consumer", "developer", "manager", "order", "retail"] })
("Can manage shop.orders.consumerOrders", PermissionMap { resource: "shop.orders.consumerOrders", scopes: ["quotation"], roles: ["developer"] })
("Can manage shop.orders.design", PermissionMap { resource: "shop.orders.design", scopes: ["edit"], roles: ["developer"] })
("Can manage shop.personal", PermissionMap { resource: "shop.personal", scopes: [], roles: ["configurator", "consumer", "developer", "manager", "order", "retail", "support"] })
("Can manage shop.personal.designs", PermissionMap { resource: "shop.personal.designs", scopes: ["thumbnails"], roles: ["developer"] })
("Can manage shop.personal.order", PermissionMap { resource: "shop.personal.order", scopes: ["addArticle", "addPanel", "assignMaterials", "create", "measure", "search.article", "thumbnails"], roles: ["developer"] })
("Can manage shop.personal.order.discount", PermissionMap { resource: "shop.personal.order.discount", scopes: ["amount"], roles: ["developer"] })
("Can manage sideFinishingMethods", PermissionMap { resource: "manage.sideFinishingMethods", scopes: ["edit"], roles: ["configurator", "developer"] })
("Can manage stockLocations", PermissionMap { resource: "manage.stockLocations", scopes: ["edit", "printLabels"], roles: ["developer"] })
("Can manage stockMutations", PermissionMap { resource: "manage.stockMutations", scopes: ["edit"], roles: ["developer"] })
("Can manage stockRoutes", PermissionMap { resource: "manage.stockRoutes", scopes: ["edit"], roles: ["developer"] })
("Can manage stockTransports", PermissionMap { resource: "manage.stockTransports", scopes: ["edit"], roles: ["developer"] })
("Can manage tables", PermissionMap { resource: "tables", scopes: ["export.csv", "export.txt", "export.xls", "export.xlsx", "filters.use"], roles: ["developer"] })
("Can manage unitsOfMeasurement", PermissionMap { resource: "manage.unitsOfMeasurement", scopes: [], roles: ["configurator", "developer"] })
("Can manage updateProductionPlanning on productionOrders", PermissionMap { resource: "manage.productionOrders", scopes: ["updateProductionPlanning"], roles: ["developer"] })
("Can manage user.properties.beamerSettings", PermissionMap { resource: "user.properties.beamerSettings", scopes: ["modify"], roles: ["developer"] })
("Can manage userGroups", PermissionMap { resource: "manage.userGroups", scopes: [], roles: ["configurator", "developer", "manager"] })
("Can manage userGroups.orderDocuments", PermissionMap { resource: "manage.userGroups.orderDocuments", scopes: ["edit"], roles: ["developer"] })
("Can manage userRoles", PermissionMap { resource: "manage.userRoles", scopes: ["edit", "permissions"], roles: ["configurator", "developer"] })
("Can manage users", PermissionMap { resource: "manage.users", scopes: ["editDesign"], roles: ["configurator", "developer", "manager"] })
("Can manage users.deliverySettings", PermissionMap { resource: "manage.users.deliverySettings", scopes: ["edit"], roles: ["developer"] })
("Can manage users.orderDocuments", PermissionMap { resource: "manage.users.orderDocuments", scopes: ["edit"], roles: ["developer"] })
("Can manage vendors", PermissionMap { resource: "manage.vendors", scopes: [], roles: ["configurator", "developer", "manager"] })
("Can recreate productionOrders", PermissionMap { resource: "manage.productionOrders", scopes: ["recreate"], roles: ["developer"] })
("Can reschedule orders", PermissionMap { resource: "manage.orders", scopes: ["reschedule"], roles: ["developer"] })
("Can reschedule productionOrders", PermissionMap { resource: "manage.productionOrders", scopes: ["reschedule"], roles: ["developer"] })
